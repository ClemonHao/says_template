ControllerRotater
(
    input signal s2c_signal_rotater_register_done;
    output signal c2s_signal_rotater_register;
    input signal s2c_signal_rotater_move2next;
    output signal c2s_signal_rotater_idle;
    output signal c2s_signal_rotater_finished;

    input signal tableAlignedWithSensor, bottleAtPos5, capOnBottleAtPos1;
    output signal rotaryTableTrigger;
)->{

    {
        int status = Controller_State.INITIAL;
        loop
        {
            switch (status)
            {
                case Controller_State.INITIAL:
                    emit c2s_signal_rotater_register;
                    present (s2c_signal_rotater_register_done)
                    {
                        status = Controller_State.CHECK_BOTTLE;
                        System.out.println("Rotater current status " + status);
                    }
                    else
                    {}

                    break;

                case Controller_State.CHECK_BOTTLE:
                    //not bottle here

                    present (bottleAtPos5 || capOnBottleAtPos1)
                    {
                        status = Controller_State.DO_PROCESS;
                    }
                    else
                    {
                        status = Controller_State.IDLE;
                    }
                    break;

                case Controller_State.DO_PROCESS:
                    //TODO do process here

                    System.out.println("do process");

                    status = Controller_State.IDLE;
                    break;

                case Controller_State.IDLE:
                    emit c2s_signal_rotater_idle;
                    await(s2c_signal_rotater_move2next);

                    emit rotaryTableTrigger;

                    present (tableAlignedWithSensor)
                    {
                        emit c2s_signal_rotater_finished;
                        status = Controller_State.CHECK_BOTTLE;
                    }
                    else
                    {}

                    break;

                default:
                    break;
            }
            pause;
        }
    }
}
